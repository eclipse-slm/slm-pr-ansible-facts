---
- name: "Set aas_id"
  ansible.builtin.set_fact:
    aas_id: "Resource_{{ hostvars[item]['resource_id'] }}"
    resource_id: "{{ hostvars[item]['resource_id'] }}"

- name: "Check aas_id parameter"
  ansible.builtin.assert:
    that:
      - (aas_id is defined) and (aas_id | length > 0)

- name: "Create AAS '{{ aas_id }}'"
  slm.aas.aas:
    scheme: http
    host: "{{ aas_repository_host }}"
    port: "{{ aas_repository_port }}"
    path: "{{ aas_repository_path }}"
    shell: "{{ aas }}"
  register: create_aas_request
  failed_when: >
    create_aas_request.status_code is defined and
    create_aas_request.status_code != 409 and
    create_aas_request.failed

- name: "Collection facts"
  ansible.builtin.setup:

- name: "Convert facts to submodel"
  slm.aas.convert_to_sm:
    id: "ansible-facts-{{ resource_id }}"
    id_short: "ansible-facts"
    facts: "{{ hostvars[item]['ansible_facts'] }}"
  register: convert_result

- name: "Register submodel '{{ convert_result.submodel.id }}' at repo"
  slm.aas.submodel:
    scheme: http
    host: "{{ submodel_repository_host }}"
    port: "{{ submodel_repository_port }}"
    path: "{{ submodel_repository_path }}"
    submodel: "{{ convert_result.submodel }}"
    force: true
  register: register_sm

- name: "Define submodel reference for submodel '{{ convert_result.submodel.id  }}'"
  set_fact:
    submodel_reference: '{
        "keys": [
          {
            "type": "Submodel",
            "value": "{{ convert_result.submodel.id }}"
          }
        ]
      }'

- name: "Add submodel reference for submodel '{{ convert_result.submodel.id  }}' to AAS '{{ aas_id }}'"
  slm.aas.submodel_reference:
    scheme: http
    host: "{{ aas_repository_host }}"
    port: "{{ aas_repository_port }}"
    path: "{{ aas_repository_path }}"
    submodel_reference: "{{ submodel_reference }}"
    shell_id: "{{ aas_id }}"
    state: present
  delegate_to: localhost
